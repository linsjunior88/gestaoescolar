const CONFIG=window.CONFIG||{getApiUrl:function(endpoint){return`/api${endpoint}`}};function atualizarPreviewTurmasVinculadas(){console.log("Updating preview of linked classes");const vinculo_turmas=document.getElementById("vinculo_turmas");const previewArea=document.getElementById("turmas-vinculadas-preview");if(!vinculo_turmas||!previewArea)return;try{const selectedOptions=Array.from(vinculo_turmas.selectedOptions||[]);if(selectedOptions.length===0){previewArea.innerHTML='<div class="alert alert-info">Nenhuma turma selecionada</div>'}else{const badgesHtml=selectedOptions.map((option=>`<span class="badge bg-primary me-1">${option.textContent}</span>`)).join("");previewArea.innerHTML=`<div class="mt-2"><div class="fw-bold mb-2">Turmas selecionadas:</div>${badgesHtml}</div>`}}catch(error){console.error("Error updating class preview:",error)}}function editarDisciplina(disciplinaId){console.log("Editing discipline:",disciplinaId);fetch(CONFIG.getApiUrl(`/disciplinas/${disciplinaId}`)).then((response=>response.ok?response.json():Promise.reject("Failed to fetch discipline"))).then((disciplina=>{const idField=document.getElementById("id_disciplina");const nameField=document.getElementById("nome_disciplina");const hoursField=document.getElementById("carga_horaria");if(idField)idField.value=disciplina.id_disciplina;if(nameField)nameField.value=disciplina.nome_disciplina;if(hoursField)hoursField.value=disciplina.carga_horaria||0;const form=document.getElementById("form-disciplina");if(form)form.setAttribute("data-mode","editar");carregarTurmasSelect(disciplina.turmas||[])})).catch((error=>{console.error("Error editing discipline:",error);alert("Erro ao carregar a disciplina para edição.")}))}function carregarTurmasSelect(turmasVinculadas=[]){console.log("Loading classes for select element, linked classes:",turmasVinculadas);const turmasSelect=document.getElementById("vinculo_turmas");if(!turmasSelect)return;turmasSelect.innerHTML="";fetch(CONFIG.getApiUrl("/turmas")).then((response=>response.ok?response.json():[])).then((turmas=>{if(turmas.length===0){const option=document.createElement("option");option.textContent="Nenhuma turma disponível";option.disabled=true;turmasSelect.appendChild(option);return}turmas.forEach((turma=>{const option=document.createElement("option");option.value=turma.id_turma;option.textContent=`${turma.id_turma} - ${turma.serie||"Série não informada"}`;if(turmasVinculadas.includes(turma.id_turma)){option.selected=true}turmasSelect.appendChild(option)}));atualizarPreviewTurmasVinculadas()})).catch((error=>{console.error("Error loading classes:",error);const option=document.createElement("option");option.textContent="Erro ao carregar turmas";option.disabled=true;turmasSelect.appendChild(option)}))}function processarVinculosTurmas(idDisciplina,turmasSelecionadas,turmasOriginais){console.log(`Processing links for discipline ${idDisciplina}`);console.log("Selected classes:",turmasSelecionadas);console.log("Original classes:",turmasOriginais);const token=localStorage.getItem("token");const authHeader=token?{Authorization:`Bearer ${token}`}:{};if(!turmasSelecionadas||turmasSelecionadas.length===0){return fetch(CONFIG.getApiUrl(`/disciplinas/${idDisciplina}/turmas`),{method:"DELETE",headers:{"Content-Type":"application/json",...authHeader}}).then((response=>{if(!response.ok&&response.status!==204){throw new Error(`Error removing links: ${response.status}`)}return{message:"All links have been removed"}}))}return fetch(CONFIG.getApiUrl(`/disciplinas/${idDisciplina}/turmas`),{headers:authHeader}).then((response=>{if(!response.ok){console.warn("Error fetching linked classes from API, using original classes");return turmasOriginais}return response.json()})).then((turmasVinculadas=>{const turmasVinculadasIds=turmasVinculadas.map((turma=>typeof turma==="object"?turma.id_turma:turma));console.log("Currently linked classes:",turmasVinculadasIds);return fetch(CONFIG.getApiUrl(`/disciplinas/${idDisciplina}/turmas`),{method:"DELETE",headers:{"Content-Type":"application/json",...authHeader}}).then((response=>{if(!response.ok&&response.status!==204){throw new Error(`Error removing existing links: ${response.status}`)}return fetch(CONFIG.getApiUrl(`/disciplinas/${idDisciplina}/turmas`),{method:"POST",headers:{"Content-Type":"application/json",...authHeader},body:JSON.stringify({turmas_ids:turmasSelecionadas})}).then((response=>{if(!response.ok){throw new Error(`Error linking classes: ${response.status}`)}return response.json()})).then((result=>{console.log(`Links created successfully:`,result);return{message:`${result.length} links created successfully`}})).catch((error=>{console.error("Error creating class links:",error);return{message:"Error creating links: "+error.message}}))}))})).catch((error=>{console.error("Error processing class links:",error);throw error}))}